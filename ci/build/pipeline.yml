groups:
- name: stablesats-rs
  jobs:
  - build-edge-image
  - check-code
  - integration-tests
  - release
  - release-docker
  - set-dev-version
  - bump-image-in-chart
jobs:
- name: check-code
  serial: true
  plan:
  - in_parallel:
    - get: repo
      trigger: true
    - get: pipeline-tasks
  - task: check-code
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          username: ((docker-creds.username))
          password: ((docker-creds.password))
          repository: us.gcr.io/galoy-org/rust-concourse
      inputs:
      - name: pipeline-tasks
      - name: repo
      caches:
      - path: cargo-home
      - path: cargo-target-dir
      run:
        path: pipeline-tasks/ci/vendor/tasks/rust-check-code.sh
  on_failure:
    put: slack
    params:
      channel: stablesats-rs-github
      username: concourse
      icon_url: https://cl.ly/2F421Y300u07/concourse-logo-blue-transparent.png
      text: '<$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME| :face_with_symbols_on_mouth: $BUILD_JOB_NAME> failed!'
- name: build-edge-image
  serial: true
  plan:
  - in_parallel:
    - get: repo
      trigger: true
    - get: pipeline-tasks
  - task: prepare-docker-build
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          username: ((docker-creds.username))
          password: ((docker-creds.password))
          repository: us.gcr.io/galoy-org/nodejs-concourse
      inputs:
      - name: pipeline-tasks
      - name: repo
      outputs:
      - name: repo
      run:
        path: pipeline-tasks/ci/vendor/tasks/docker-prep-docker-build-env.sh
  - task: build
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      inputs:
      - name: repo
      outputs:
      - name: image
      params:
        CONTEXT: repo
      run:
        path: build
  - put: edge-image
    params:
      image: image/image.tar
- name: integration-tests
  serial: true
  plan:
  - put: docker-host
    params:
      acquire: true
  - in_parallel:
    - get: repo
      trigger: true
    - get: pipeline-tasks
  - task: integration-tests
    attempts: 2
    timeout: 12m
    tags:
    - galoy-staging
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          username: ((docker-creds.username))
          password: ((docker-creds.password))
          repository: us.gcr.io/galoy-org/rust-concourse
      inputs:
      - name: pipeline-tasks
      - name: docker-host
      - name: repo
        path: stablesats-rs-integration-tests
      caches:
      - path: cargo-home
      - path: cargo-target-dir
      params:
        OKEX_API_KEY: ((okex-creds.api_key))
        OKEX_PASSPHRASE: ((okex-creds.passphrase))
        OKEX_SECRET_KEY: ((okex-creds.secret_key))
        GALOY_PHONE_NUMBER: ((galoy-creds.phone_number))
        GALOY_PHONE_CODE: ((galoy-creds.auth_code))
        REPO_PATH: stablesats-rs-integration-tests
        GOOGLE_CREDENTIALS: ((staging-gcp-creds.creds_json))
        SSH_PRIVATE_KEY: ((staging-ssh.ssh_private_key))
        SSH_PUB_KEY: ((staging-ssh.ssh_public_key))
        TEST_CONTAINER: integration-tests
        JEST_TIMEOUT: 90000
      run:
        path: pipeline-tasks/ci/vendor/tasks/test-on-docker-host.sh
    ensure:
      put: docker-host
      params:
        release: docker-host
  on_failure:
    put: slack
    params:
      channel: stablesats-rs-github
      username: concourse
      icon_url: https://cl.ly/2F421Y300u07/concourse-logo-blue-transparent.png
      text: '<$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME| :face_with_symbols_on_mouth: $BUILD_JOB_NAME> failed!'
- name: release
  serial: true
  plan:
  - in_parallel:
    - get: repo
      passed:
      - integration-tests
      - check-code
    - get: pipeline-tasks
    - get: version
  - task: prep-release
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          username: ((docker-creds.username))
          password: ((docker-creds.password))
          repository: us.gcr.io/galoy-org/release-pipeline
      inputs:
      - name: pipeline-tasks
      - name: repo
      - name: version
      outputs:
      - name: version
      - name: artifacts
      run:
        path: pipeline-tasks/ci/vendor/tasks/prep-release-src.sh
  - task: update-repo
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          username: ((docker-creds.username))
          password: ((docker-creds.password))
          repository: us.gcr.io/galoy-org/rust-concourse
      inputs:
      - name: artifacts
      - name: pipeline-tasks
      - name: repo
      - name: version
      outputs:
      - name: repo
      run:
        path: pipeline-tasks/ci/tasks/update-repo.sh
  - in_parallel:
    - task: build-static-release
      privileged: true
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: clux/muslrust
            tag: stable
        inputs:
        - name: version
        - name: pipeline-tasks
        - name: repo
        outputs:
        - name: x86_64-unknown-linux-musl
        caches:
        - path: cargo-home
        - path: cargo-target-dir
        params:
          TARGET: x86_64-unknown-linux-musl
          OUT: x86_64-unknown-linux-musl
        run:
          path: pipeline-tasks/ci/tasks/build-release.sh
  - put: repo
    params:
      tag: artifacts/gh-release-tag
      repository: repo
      merge: true
  - put: version
    params:
      file: version/version
  - task: github-release
    config:
      image_resource:
        type: registry-image
        source:
          username: ((docker-creds.username))
          password: ((docker-creds.password))
          repository: us.gcr.io/galoy-org/rust-concourse
      platform: linux
      inputs:
      - name: x86_64-unknown-linux-musl
      - name: version
      - name: pipeline-tasks
      - name: artifacts
      outputs:
      - name: artifacts
      params:
        BRANCH: main
      run:
        path: pipeline-tasks/ci/tasks/github-release.sh
  - put: gh-release
    params:
      name: artifacts/gh-release-name
      tag: artifacts/gh-release-tag
      body: artifacts/gh-release-notes.md
      globs:
      - artifacts/binaries/*
- name: release-docker
  serial: true
  plan:
  - in_parallel:
    - get: repo
      passed:
      - release
    - get: version
      passed:
      - release
      trigger: true
    - get: pipeline-tasks
  - task: prepare-docker-build
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          username: ((docker-creds.username))
          password: ((docker-creds.password))
          repository: us.gcr.io/galoy-org/rust-concourse
      inputs:
      - name: pipeline-tasks
      - name: version
      - name: repo
      outputs:
      - name: repo
      run:
        path: pipeline-tasks/ci/vendor/tasks/docker-prep-docker-build-env.sh
  - task: build
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: gcr.io/kaniko-project/executor
          tag: debug
      inputs:
      - name: repo
      outputs:
      - name: image
      run:
        path: /bin/sh
        args:
        - -exc
        - |
          /kaniko/executor \
            --dockerfile=repo/Dockerfile.release \
            --context=repo \
            $(awk -F= '{print "--build-arg="$1"="$2}' repo/.env) \
            --use-new-run \
            --single-snapshot \
            --cache=false \
            --no-push \
            --tar-path=image/image.tar
  - put: latest-image
    params:
      image: image/image.tar
      additional_tags: version/version
- name: set-dev-version
  plan:
  - in_parallel:
    - get: repo
      passed:
      - release
    - get: pipeline-tasks
    - get: version
      trigger: true
      params:
        bump: patch
      passed:
      - release
  - task: set-dev-version
    config:
      image_resource:
        type: registry-image
        source:
          username: ((docker-creds.username))
          password: ((docker-creds.password))
          repository: us.gcr.io/galoy-org/release-pipeline
      platform: linux
      inputs:
      - name: version
      - name: repo
      - name: pipeline-tasks
      outputs:
      - name: repo
      run:
        path: pipeline-tasks/ci/tasks/set-dev-version.sh
      params:
        BRANCH: main
  - put: repo
    params:
      repository: repo
      rebase: true
- name: bump-image-in-chart
  plan:
  - in_parallel:
    - get: latest-image
      passed:
      - release-docker
      params:
        skip_download: true
    - get: repo
      trigger: true
      passed:
      - release-docker
    - get: version
      trigger: true
      passed:
      - release-docker
    - get: charts-repo
      params:
        skip_download: true
    - get: pipeline-tasks
  - task: bump-image-digest-in-values
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          username: ((docker-creds.username))
          password: ((docker-creds.password))
          repository: us.gcr.io/galoy-org/nodejs-concourse
      inputs:
      - name: repo
      - name: latest-image
      - name: pipeline-tasks
      - name: charts-repo
      - name: version
      outputs:
      - name: charts-repo
      params:
        BRANCH: main
        CHARTS_SUBDIR: stablesats
      run:
        path: pipeline-tasks/ci/tasks/bump-image-digest.sh
  - put: charts-repo-bot-branch
    params:
      repository: charts-repo
      force: true
  - task: open-charts-pr
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          username: ((docker-creds.username))
          password: ((docker-creds.password))
          repository: us.gcr.io/galoy-org/nodejs-concourse
      inputs:
      - name: repo
      - name: pipeline-tasks
      - name: latest-image
      - name: charts-repo
      params:
        GH_TOKEN: ((github.api_token))
        BRANCH: main
        BOT_BRANCH: bot-bump-stablesats-rs-image
        CHARTS_SUBDIR: stablesats
      run:
        path: pipeline-tasks/ci/tasks/open-charts-pr.sh
resources:
- name: repo
  type: git
  source:
    ignore_paths:
    - ci/*[^md]
    fetch_tags: true
    uri: git@github.com:GaloyMoney/stablesats-rs.git
    branch: main
    private_key: ((github.private_key))
  webhook_token: ((webhook.secret))
- name: pipeline-tasks
  type: git
  source:
    paths:
    - ci/vendor/*
    - ci/tasks/*
    - ci/config/*
    - Makefile
    uri: git@github.com:GaloyMoney/stablesats-rs.git
    branch: main
    private_key: ((github.private_key))
- name: slack
  type: slack-notification
  source:
    url: ((addons-slack.api_url))
- name: version
  type: semver
  source:
    initial_version: 0.0.0
    driver: git
    file: version
    uri: git@github.com:GaloyMoney/stablesats-rs.git
    branch: version
    private_key: ((github.private_key))
- name: gh-release
  type: github-release
  source:
    owner: GaloyMoney
    repository: stablesats-rs
    access_token: ((github.api_token))
- name: edge-image
  type: registry-image
  source:
    tag: edge
    username: ((docker-creds.username))
    password: ((docker-creds.password))
    repository: us.gcr.io/galoy-org
- name: latest-image
  type: registry-image
  source:
    tag: latest
    username: ((docker-creds.username))
    password: ((docker-creds.password))
    repository: us.gcr.io/galoy-org/stablesats-rs
- name: charts-repo
  type: git
  source:
    uri: git@github.com:GaloyMoney/charts.git
    branch: main
    private_key: ((github.private_key))
- name: charts-repo-bot-branch
  type: git
  source:
    uri: git@github.com:GaloyMoney/charts.git
    branch: bot-bump-stablesats-rs-image
    private_key: ((github.private_key))
- name: docker-host
  type: pool
  source:
    uri: git@github.com:GaloyMoney/concourse-locks.git
    branch: main
    pool: docker-hosts
    private_key: ((github.private_key))
resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
---
apiVersion: vendir.k14s.io/v1alpha1
directories:
- contents:
  - git:
      commitTitle: 'feat: allow public or private repo selection (#34)'
      sha: 53fc9dd805d3574d200e8e6e99f856c0912b52a8
    path: .
  path: ../.github/workflows/vendor
- contents:
  - git:
      commitTitle: 'feat: allow public or private repo selection (#34)'
      sha: 53fc9dd805d3574d200e8e6e99f856c0912b52a8
    path: .
  path: ./vendor
kind: LockConfig
---
apiVersion: vendir.k14s.io/v1alpha1
kind: Config
directories:
- path: ../.github/workflows/vendor
  contents:
  - path: .
    git:
      url: https://github.com/GaloyMoney/concourse-shared.git
      ref: 53fc9dd805d3574d200e8e6e99f856c0912b52a8
    includePaths:
    - shared/actions/*
    excludePaths:
    - shared/actions/nodejs-*
    newRootPath: shared/actions
- path: ./vendor
  contents:
  - path: .
    git:
      url: https://github.com/GaloyMoney/concourse-shared.git
      ref: 53fc9dd805d3574d200e8e6e99f856c0912b52a8
    includePaths:
    - shared/ci/**/*
    excludePaths:
    - shared/ci/**/nodejs-*
    newRootPath: shared/ci
